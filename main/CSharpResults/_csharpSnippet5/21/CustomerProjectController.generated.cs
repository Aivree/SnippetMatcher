// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace VendorsManage.Controllers {
    public partial class CustomerProjectController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected CustomerProjectController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Edit() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Delete() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Delete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult LookUpArea() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.LookUpArea);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult LookUpCapacity() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.LookUpCapacity);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult CustomerExist() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.CustomerExist);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ApplyNoExist() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ApplyNoExist);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Send() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Send);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ArchieveProject() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ArchieveProject);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GetActionUser() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.GetActionUser);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult RecieveProject() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.RecieveProject);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ReturnProject() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ReturnProject);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult CancelProject() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.CancelProject);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ReturnCanceledProject() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ReturnCanceledProject);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult CustPrjEquips() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.CustPrjEquips);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GetEquips() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.GetEquips);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult AddEquip() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.AddEquip);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult EditEquip() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.EditEquip);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DeleteEquip() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.DeleteEquip);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult LookUpEquip() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.LookUpEquip);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult LookUpSupply() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.LookUpSupply);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult LookUpSelectedType() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.LookUpSelectedType);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GetEqYearSummary() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.GetEqYearSummary);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GetMonthDetailByCompany() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.GetMonthDetailByCompany);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GetMonthSummaryByCompany() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.GetMonthSummaryByCompany);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Constructinfo() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Constructinfo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult SaveConstructinfo() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.SaveConstructinfo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult LookUpConstructBy() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.LookUpConstructBy);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult LookUpConstructType() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.LookUpConstructType);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult LookUpDesignedBy() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.LookUpDesignedBy);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GetConstructYearSummary() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.GetConstructYearSummary);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GetMonthContructSummaryByCompany() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.GetMonthContructSummaryByCompany);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GetMonthConstructDetailByCompany() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.GetMonthConstructDetailByCompany);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public CustomerProjectController Actions { get { return MVC.CustomerProject; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "CustomerProject";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string TodoList = "TodoList";
            public readonly string GroupTodoList = "GroupTodoList";
            public readonly string CanceledProjects = "CanceledProjects";
            public readonly string HandledList = "HandledList";
            public readonly string CustProjects = "CustProjects";
            public readonly string ProcessingProjects = "ProcessingProjects";
            public readonly string FinishedProjects = "FinishedProjects";
            public readonly string ExportListToExcel = "ExportListToExcel";
            public readonly string ExportUnfinishedToExcel = "ExportUnfinishedToExcel";
            public readonly string Create = "Create";
            public readonly string Edit = "Edit";
            public readonly string Delete = "Delete";
            public readonly string LookUpArea = "LookUpArea";
            public readonly string LookUpCapacity = "LookUpCapacity";
            public readonly string CustomerExist = "CustomerExist";
            public readonly string ApplyNoExist = "ApplyNoExist";
            public readonly string Send = "Send";
            public readonly string ArchieveProject = "ArchieveProject";
            public readonly string GetActionUser = "GetActionUser";
            public readonly string RecieveProject = "RecieveProject";
            public readonly string ReturnProject = "ReturnProject";
            public readonly string CancelProject = "CancelProject";
            public readonly string ReturnCanceledProject = "ReturnCanceledProject";
            public readonly string CustPrjEquips = "CustPrjEquips";
            public readonly string GetEquips = "GetEquips";
            public readonly string AddEquip = "AddEquip";
            public readonly string EditEquip = "EditEquip";
            public readonly string DeleteEquip = "DeleteEquip";
            public readonly string LookUpEquip = "LookUpEquip";
            public readonly string LookUpSupply = "LookUpSupply";
            public readonly string LookUpSelectedType = "LookUpSelectedType";
            public readonly string CustomerEqCompany = "CustomerEqCompany";
            public readonly string GetEqYearSummary = "GetEqYearSummary";
            public readonly string GetMonthDetailByCompany = "GetMonthDetailByCompany";
            public readonly string GetMonthSummaryByCompany = "GetMonthSummaryByCompany";
            public readonly string Constructinfo = "Constructinfo";
            public readonly string SaveConstructinfo = "SaveConstructinfo";
            public readonly string LookUpConstructBy = "LookUpConstructBy";
            public readonly string LookUpConstructType = "LookUpConstructType";
            public readonly string LookUpDesignedBy = "LookUpDesignedBy";
            public readonly string CustomerConstructCompany = "CustomerConstructCompany";
            public readonly string GetConstructYearSummary = "GetConstructYearSummary";
            public readonly string GetMonthContructSummaryByCompany = "GetMonthContructSummaryByCompany";
            public readonly string GetMonthConstructDetailByCompany = "GetMonthConstructDetailByCompany";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _ConstructList = "~/Views/CustomerProject/_ConstructList.cshtml";
            public readonly string _DropListUser = "~/Views/CustomerProject/_DropListUser.cshtml";
            public readonly string _EqList = "~/Views/CustomerProject/_EqList.cshtml";
            public readonly string _SendProject = "~/Views/CustomerProject/_SendProject.cshtml";
            public readonly string AddEquip = "~/Views/CustomerProject/AddEquip.cshtml";
            public readonly string Constructinfo = "~/Views/CustomerProject/Constructinfo.cshtml";
            public readonly string Create = "~/Views/CustomerProject/Create.cshtml";
            public readonly string CustomerConstructCompany = "~/Views/CustomerProject/CustomerConstructCompany.cshtml";
            public readonly string CustomerEqCompany = "~/Views/CustomerProject/CustomerEqCompany.cshtml";
            public readonly string CustPrjEquips = "~/Views/CustomerProject/CustPrjEquips.cshtml";
            public readonly string Edit = "~/Views/CustomerProject/Edit.cshtml";
            public readonly string EditEquip = "~/Views/CustomerProject/EditEquip.cshtml";
            public readonly string EquipList = "~/Views/CustomerProject/EquipList.cshtml";
            public readonly string GroupTodoList = "~/Views/CustomerProject/GroupTodoList.cshtml";
            public readonly string HandledList = "~/Views/CustomerProject/HandledList.cshtml";
            public readonly string TodoList = "~/Views/CustomerProject/TodoList.cshtml";
            static readonly _EditorTemplates s_EditorTemplates = new _EditorTemplates();
            public _EditorTemplates EditorTemplates { get { return s_EditorTemplates; } }
            public partial class _EditorTemplates{
                public readonly string Areas = "Areas";
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_CustomerProjectController: VendorsManage.Controllers.CustomerProjectController {
        public T4MVC_CustomerProjectController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult TodoList() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.TodoList);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GroupTodoList() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.GroupTodoList);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CanceledProjects() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CanceledProjects);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult HandledList() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.HandledList);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CustProjects() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CustProjects);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ProcessingProjects() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ProcessingProjects);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FinishedProjects() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FinishedProjects);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ExportListToExcel() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ExportListToExcel);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ExportUnfinishedToExcel() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ExportUnfinishedToExcel);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Create() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Create);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Create(VendorsManage.Models.ViewModel.CustProjectModel toadd) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Create);
            callInfo.RouteValueDictionary.Add("toadd", toadd);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id, VendorsManage.Models.ViewModel.CustProjectModel editedprj) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("editedprj", editedprj);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Delete(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Delete);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LookUpArea(string term) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LookUpArea);
            callInfo.RouteValueDictionary.Add("term", term);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LookUpCapacity(string term) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LookUpCapacity);
            callInfo.RouteValueDictionary.Add("term", term);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CustomerExist(string customerno, int editmode) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CustomerExist);
            callInfo.RouteValueDictionary.Add("customerno", customerno);
            callInfo.RouteValueDictionary.Add("editmode", editmode);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ApplyNoExist(string applyno, int editmode) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ApplyNoExist);
            callInfo.RouteValueDictionary.Add("applyno", applyno);
            callInfo.RouteValueDictionary.Add("editmode", editmode);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Send(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Send);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Send(int id, int todoby, int desnodeid, string msg) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Send);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("todoby", todoby);
            callInfo.RouteValueDictionary.Add("desnodeid", desnodeid);
            callInfo.RouteValueDictionary.Add("msg", msg);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ArchieveProject(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ArchieveProject);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetActionUser(int tasknodeid) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.GetActionUser);
            callInfo.RouteValueDictionary.Add("tasknodeid", tasknodeid);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult RecieveProject(int prjid) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.RecieveProject);
            callInfo.RouteValueDictionary.Add("prjid", prjid);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ReturnProject(int prjid) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ReturnProject);
            callInfo.RouteValueDictionary.Add("prjid", prjid);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CancelProject(int prjid) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CancelProject);
            callInfo.RouteValueDictionary.Add("prjid", prjid);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ReturnCanceledProject(int prjid) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ReturnCanceledProject);
            callInfo.RouteValueDictionary.Add("prjid", prjid);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CustPrjEquips(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CustPrjEquips);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetEquips(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.GetEquips);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult AddEquip(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.AddEquip);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult AddEquip(int id, VendorsManage.Models.ViewModel.CustEquipModel equip) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.AddEquip);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("equip", equip);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult EditEquip(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.EditEquip);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult EditEquip(int id, VendorsManage.Models.ViewModel.CustEquipModel equip) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.EditEquip);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("equip", equip);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeleteEquip(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeleteEquip);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LookUpEquip(string term) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LookUpEquip);
            callInfo.RouteValueDictionary.Add("term", term);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LookUpSupply(string term) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LookUpSupply);
            callInfo.RouteValueDictionary.Add("term", term);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LookUpSelectedType(string term) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LookUpSelectedType);
            callInfo.RouteValueDictionary.Add("term", term);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CustomerEqCompany() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CustomerEqCompany);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetEqYearSummary(int year) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.GetEqYearSummary);
            callInfo.RouteValueDictionary.Add("year", year);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetMonthDetailByCompany(int year, int month, string companyname) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.GetMonthDetailByCompany);
            callInfo.RouteValueDictionary.Add("year", year);
            callInfo.RouteValueDictionary.Add("month", month);
            callInfo.RouteValueDictionary.Add("companyname", companyname);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetMonthSummaryByCompany(string companyname, int year) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.GetMonthSummaryByCompany);
            callInfo.RouteValueDictionary.Add("companyname", companyname);
            callInfo.RouteValueDictionary.Add("year", year);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Constructinfo(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Constructinfo);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SaveConstructinfo(int prjid, VendorsManage.Models.ViewModel.CustConstructModel tosave) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.SaveConstructinfo);
            callInfo.RouteValueDictionary.Add("prjid", prjid);
            callInfo.RouteValueDictionary.Add("tosave", tosave);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LookUpConstructBy(string term) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LookUpConstructBy);
            callInfo.RouteValueDictionary.Add("term", term);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LookUpConstructType(string term) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LookUpConstructType);
            callInfo.RouteValueDictionary.Add("term", term);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LookUpDesignedBy(string term) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LookUpDesignedBy);
            callInfo.RouteValueDictionary.Add("term", term);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CustomerConstructCompany() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CustomerConstructCompany);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetConstructYearSummary(int year) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.GetConstructYearSummary);
            callInfo.RouteValueDictionary.Add("year", year);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetMonthContructSummaryByCompany(string companyname, int year) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.GetMonthContructSummaryByCompany);
            callInfo.RouteValueDictionary.Add("companyname", companyname);
            callInfo.RouteValueDictionary.Add("year", year);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetMonthConstructDetailByCompany(int year, int month, string companyname) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.GetMonthConstructDetailByCompany);
            callInfo.RouteValueDictionary.Add("year", year);
            callInfo.RouteValueDictionary.Add("month", month);
            callInfo.RouteValueDictionary.Add("companyname", companyname);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
